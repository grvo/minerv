// arquivo baseado em animate.css v3.5.1, disponível aqui
// https://github.com/daneden/animate.css/blob/3.5.1/animate.css
//
// animate.css - https://daneden.me/animate
// versão - 3.5.1
// licensiado pela mit license
//
// copyright (c) 2023 grivo

.animated {
    @include webkit-prefix(animation-duration, 1s);
    @include webkit-prefix(animation-fill-mode, both);

    &.once {
        @include webkit-prefix(animation-iteration-count, 1);
    }

    &.short {
        @include webkit-prefix(animation-duration, 321ms);
        @include webkit-prefix(animation-fill-mode, none);
    }
}

@include keyframes(pulse) {
    from, to {
        @include webkit-prefix(transform, scale3d(1, 1, 1));
    }

    50% {
        @include webkit-prefix(transform, scale3d(1.05, 1.05, 1.05));
    }
}

.pulse {
    @include webkit-prefix(animation-name, pulse);
}

/*
 * animações de hover gerais
 */

// passar em qualquer número de transições
@mixin transition($transitions...) {
    $unfolded-transitions: ();

    @each $transition in $transitions {
        $unfolded-transitions: append($unfolded-transitions, $unfold-transition($transition), comma);
    }

    transition: $unfolded-transitions;
}

@mixin disable-all-animation {
    /* transições css */
    transition-property: none !important;

    /* transformadores css */
    transform: none !important;

    /* animações css */
    animation: none !important;
}

@function unfold-transition ($transition) {
    // valores padrões
    $property: all;
    $duration: $general-hover-transition-duration;
    $easing: $general-hover-transition-curve; // padrão de navegadores é ease
    $delay: null; // padrão de navegadores é 0
    $default-properties: ($property, $duration, $easing, $delay);

    // manter propriedades de transições se existentes
    $unfold-transition: ();

    @for $i from 1 through length($default-properties) {
        $p: null;

        @if $i <= length($transition) {
            $p: nth($transition, $i);
        } @else {
            $p: nth($default-properties, $i);
        }

        $unfolded-transition: append($unfolded-transition, $p);
    }

    @return $unfolded-transition;
}

.btn {
    @include transition(background-color, border-color, color, box-shadow);
}

.dropdown-menu-toggle,
.header-user-avatar {
    @include transition(border-color);
}

.note-action-button,
.dropdown-toggle-caret {
    @include transition(color);
}

.notification-dot {
    @include transition(background-color, color, border);
}

.stage-nav-item {
    @include transition(background-color, box-shadow);
}

.dropdown-menu a,
.dropdown-menu button {
    transition: none;
}

@keyframes fadeIn {
    0% {
        opacity: 0;
    }

    100% {
        opacity: 1;
    }
}

.fade-in {
    animation: fadeIn $fade-in-duration 1;
}

@keyframes fadeInHalf {
    0% {
        opacity: 0;
    }

    100% {
        opacity: 0.5;
    }
}

.fade-in-half {
    animation: fadeInHalf $fade-in-duration 1;
}

@keyframes fadeInFull {
    0% {
        opacity: 0.5;
    }

    100% {
        opacity: 1;
    }
}

.fade-in-full {
    animation: fadeInFull $fade-in-duration 1;
}

.animation-container {
    height: 40px;
    overflow: hidden;

    &.animation-container-small {
        height: 12px;
    }

    &.animation-container-right {
        .skeleton-line-2 {
            left: 0;
            right: 150px;
        }
    }

    [class^='skeleton-line-'] {
        position: relative;
        background-color: $gray-50;
        height: 10px;
        overflow: hidden;

        &:not(:last-of-type) {
            margin-bottom: 4px;
        }

        &::after {
            content: ' ';
            display: block;
            animation: blockTextShine 1s linear infinite forwards;
            background-repeat: no-repeat;
            background-size: cover;
            background-image: linear-gradient(to right,
            $gray-50 0%,
            $gray-10 20%,
            $gray-50 40%,
            $gray-50 100%);
            height: 10px;
        }
    }
}

$skeleton-line-widths: (
    156px,
    235px,
    200px
);

@for $count from 1 through length($skeleton-line-widths) {
    .skeleton-line-#{$count} {
        width: nth($skeleton-line-widths, $count);
    }
}

@keyframes blockTextShine {
    0% {
        transform: translateX(-468px);
    }

    100% {
        transform: translateX(468px);
    }
}

.slide-down-enter-active {
    transition: transform 0.2s;
}

.slide-down-enter,
.slide-down-leave-to {
    transform: translateY(-30%);
}

@keyframes spin {
    0% {
        transform: rotate(0deg);
    }

    100% {
        transform: rotate(360deg);
    }
}

/** classes de animações comuns **/
.transform-origin-center {
    @include webkit-prefix(transform-origin, 50% 50%);
}

.animate-n-spin {
    @include webkit-prefix(animation-name, spin);
}

.animate-c-infinite {
    @include webkit-prefix(animation-iteration-count, infinite);
}

.animate-t-linear {
    @include webkit-prefix(animation-timing-function, linear);
}

.animate-d-1 {
    @include webkit-prefix(animation-duration, 1s);
}

.animate-d-2 {
    @include webkit-prefix(animation-duration, 2s);
}

/** classes de animações compostas **/
.gl-spinner {
    @include webkit-prefix(animation-name, spin);
    @include webkit-prefix(animation-iteration-count, infinite);
    @include webkit-prefix(animation-timing-function, linear);
    @include webkit-prefix(animation-duration, 1s);

    transform-origin: 50% 50%;
}

// gerado por animista
@keyframes slide-in-fwd-bottom {
    0% {
        transform: translateZ(-1400px) translateY(800px);
        opacity: 0;
    }

    100% {
        transform: translateZ(0) translateY(0);
        opacity: 0;
    }
}

.slide-in-fwd-bottom-enter-active {
    animation: slide-in-fwd-bottom 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94) both;
}

.slide-in-fwd-bottom-leave-active {
    animation: slide-in-fwd-bottom 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94) both reverse;
}